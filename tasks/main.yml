- name: Set default database type if not provided
  set_fact:
    semaphore_db_type: "{{ semaphore_db_type | default('bolt') }}"

- name: Determine the docker-compose template to use based on semaphore_db_type
  set_fact:
    compose_template: >-
      {{ 'compose-bolt.yml.j2' if semaphore_db_type == 'bolt'
         else ('compose-mysql.yml.j2' if semaphore_db_type == 'mysql'
         else ('compose-postgres.yml.j2' if semaphore_db_type == 'postgres'
         else 'compose-bolt.yml.j2')) }}

- name: Ensure semaphore data directory exists with correct permissions
  file:
    path: "{{ data_dir }}"
    state: directory
    mode: "0755"
    owner: root
    group: root

- name: Ensure semaphore config directory exists with correct permissions
  file:
    path: "{{ config_dir }}"
    state: directory
    mode: "0755"
    owner: root
    group: root

- name: Ensure semaphore tmp directory exists with correct permissions
  file:
    path: "{{ tmp_dir }}"
    state: directory
    mode: "0755"
    owner: root
    group: root

- name: Ensure the /opt/semaphore directory exists
  file:
    path: /opt/semaphore
    state: directory
    mode: "0755"
    owner: root
    group: root

- name: Deploy docker-compose file from template
  template:
    src: "{{ compose_template }}"
    dest: /opt/semaphore/docker-compose.yml
  register: compose_deploy

- name: Check if SemaphoreUI container is running
  shell: docker ps -q -f name=semaphore
  register: semaphore_running
  changed_when: false

- name: Handle docker-compose file changes (restart container)
  block:
    - name: Bring down SemaphoreUI container if running
      shell: docker compose down
      args:
        chdir: /opt/semaphore
      when: semaphore_running.stdout != ""

    - name: Prune unused docker containers
      shell: docker container prune -f
      when: semaphore_running.stdout != ""
      
    - name: Start SemaphoreUI using docker-compose CLI (after change)
      shell: docker compose up -d
      args:
        chdir: /opt/semaphore
  when: compose_deploy.changed

- name: Start SemaphoreUI using docker-compose CLI if no changes detected
  shell: docker compose up -d
  args:
    chdir: /opt/semaphore
  when: not compose_deploy.changed

- name: Wait for SemaphoreUI container to be running
  shell: docker inspect --format '{{ "{{" }}.State.Running{{ "}}" }}' semaphore
  register: container_status_final
  retries: 10
  delay: 10
  until: container_status_final.stdout | trim == "true"